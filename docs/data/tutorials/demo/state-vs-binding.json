{"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"code":"@State","type":"codeVoice"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"В каких случаях применять State, а в каких Binding разберем на примерах в этом уроке.","type":"text"}]}],"title":"State vs Binding","kind":"hero","estimatedTimeInMinutes":10,"chapter":"Внутренний и внешний State"},{"kind":"tasks","tasks":[{"anchor":"Применение-и-возможности-State","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Рассмотрим простейшее поле ввода.","type":"text"}]}],"caption":[{"inlineContent":[{"type":"codeVoice","code":"$text"},{"text":" “превращает” наш локальный State в ","type":"text"},{"type":"codeVoice","code":"Binding<String>"},{"text":", так как State представляет собой propertyWrapper, projectedValue которого и есть Binding.","type":"text"}],"type":"paragraph"}],"code":"StateOrBinding-01-01.swift","media":null,"runtimePreview":null,"type":"step"},{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Это все возможности регулировки State извне."}]}],"type":"step","media":null,"code":"StateOrBinding-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Добавим установку начального значения через init.","type":"text"}]}],"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Можно переписать init с инициализатором State."}]}],"caption":[{"type":"paragraph","inlineContent":[{"text":"Результат будет тем же.","type":"text"}]}],"media":null,"runtimePreview":null,"type":"step","code":"StateOrBinding-01-03.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Для отслеживания изменений свойств можно использовать модификатор ","type":"text"},{"type":"codeVoice","code":"onChange"},{"text":", достпуный из коробки.","type":"text"}]}],"caption":[],"type":"step","code":"StateOrBinding-01-04.swift","runtimePreview":null,"media":null}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"State используется для хранения данных внутри вью.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Каждое изменение State запускает перерисовку вью."}]}]}],"title":"Применение и возможности State"},{"stepsSection":[{"code":"StateOrBinding-02-01.swift","caption":[{"inlineContent":[{"text":"ProjectedValue у Binding остается Binding. Изменяется тип параметра для начального значения на ","type":"text"},{"code":"Binding<String>","type":"codeVoice"}],"type":"paragraph"}],"type":"step","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Перепишем поле ввода с использованием Binding.","type":"text"}]}]},{"runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"text":"Binding позволяет нам установить константное значение, что очень полезно при тестировании.","type":"text"}],"type":"paragraph"}],"code":"StateOrBinding-02-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Обратимся к нашему полю ввода из другой View.","type":"text"}]}],"media":null},{"type":"step","code":"StateOrBinding-02-03.swift","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"С Binding мы можем привязать значение к другому State или Binding."}]}],"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Или связать значение с "},{"code":"Published","type":"codeVoice"},{"text":" свойтсвом какого-нибудь сервиса, формирующего State для View.","type":"text"}]}],"type":"step","caption":[],"media":null,"code":"StateOrBinding-02-04.swift","runtimePreview":null}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"Binding используется для передачи данных между View.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Аналогично State, Binding запускает перерисовку вью при изменении значения.","type":"text"}],"type":"paragraph"}]}],"title":"Применение и возможности Binding","anchor":"Применение-и-возможности-Binding"}]},{"anchor":"Check-Your-Understanding","kind":"assessments","assessments":[{"type":"multiple-choice","content":[],"choices":[{"content":[{"inlineContent":[{"type":"text","text":"Binding"}],"type":"paragraph"}],"isCorrect":true,"justification":[{"inlineContent":[{"type":"text","text":"Используя Binding, мы сможем передать значение в другую View"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"State"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"text":"Используя State, мы не сможем передать значение в другую View. То есть не сможем оформить его как отдельный компонент.","type":"text"}]}],"isCorrect":false}],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Дана View с полем ввода. Оформляем эту View как отдельный компонент."},{"text":" ","type":"text"},{"type":"text","text":"Какой тип свойства использовать для хранения значения поля?"}]}]},{"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Binding тут избыточен. Маловероятен случай, когда нам нужно передавать это значение в другую View или менять извне."}]}],"isCorrect":false,"content":[{"inlineContent":[{"text":"Binding","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"State"}],"type":"paragraph"}],"isCorrect":true,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Анимация это ограниченное по времени событие. Идеальный пример внутреннего State без оговорок."}]}]}],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Дана View с кастомной анимацией на кнопке. Какой тип свойства использовать для хранения состояния анимации?"}]}],"content":[],"type":"multiple-choice"}]},{"kind":"callToAction","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"action":{"isActive":true,"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder","type":"reference","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"featuredEyebrow":"Tutorial","title":"ViewState, UniversalState и ViewStateHolder"}],"metadata":{"categoryPathComponent":"Table-of-contents","category":"Оглавление","role":"project","title":"State vs Binding"},"variants":[{"paths":["\/tutorials\/demo\/state-vs-binding"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","kind":"task"}]},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding","kind":"assessment"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State","projects":[{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding","kind":"assessment"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding"},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder"}]},{"projects":[{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents","paths":[["doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/$volume","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State"]]},"kind":"project","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","interfaceLanguage":"swift"},"references":{"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#Check-Your-Understanding":{"url":"\/tutorials\/demo\/state-vs-binding#Check-Your-Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"type":"link","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding","title":"Check Your Understanding"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/-----------------------View":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View","url":"\/tutorials\/table-of-contents\/-----------------------view","role":"article","title":"Связь между модулями и View"},"StateOrBinding-01-04.swift":{"fileType":"swift","type":"file","highlights":[{"line":17},{"line":18}],"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self._text = State(initialValue: text)","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }.onChanged(of: text) { newValue in","            debugPrint(\"Text changed to \\(newValue)\")","        }","    }","}"],"syntax":"swift","identifier":"StateOrBinding-01-04.swift","fileName":"TutorForm.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9":{"abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","type":"section","role":"pseudoSymbol","kind":"section","title":"Передача значений","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},"StateOrBinding-02-02.swift":{"fileName":"TestView.swift","content":["import SwiftUI","","struct TestView: View {","    var body: some View {","        TutorForm(text: .constant(\"Не редактируемое значение\"))","    }","}"],"fileType":"swift","type":"file","syntax":"swift","highlights":[],"identifier":"StateOrBinding-02-02.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","kind":"section","role":"pseudoSymbol","title":"Weak - Наша альтернатива EnvironmentObject","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","type":"section"},"StateOrBinding-02-03.swift":{"fileType":"swift","type":"file","highlights":[{"line":4},{"line":5},{"line":6},{"line":8}],"content":["import SwiftUI","","struct TestView: View {","","    @State private var text: String = \"\"","","    var body: some View {","        TutorForm(text: $text)","    }","}"],"syntax":"swift","identifier":"StateOrBinding-02-03.swift","fileName":"TestView.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade":{"abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"project","estimatedTime":"5min","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade","url":"\/tutorials\/demo\/facade","role":"project","title":"Facade как лицо модуля"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals","abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"type":"text","text":" это протокол, используемый для оповещения модулей верхнего уровня о "},{"inlineContent":[{"text":"событиях","type":"text"}],"type":"strong"},{"text":", происходящих в других модулях.","type":"text"}],"kind":"project","role":"project","type":"topic","url":"\/tutorials\/demo\/signals","estimatedTime":"10min","title":"Оповещение других модулей"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding":{"title":"Применение и возможности Binding","role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder":{"abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"kind":"section","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","title":"Примеры обмена данными между View и State через ViewStateHolder"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0":{"abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"text":", происходящих в других модулях.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","type":"section","title":"Пример отправки и обработки сигнала","role":"pseudoSymbol"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak","type":"topic","role":"project","kind":"project","title":"Применение Environment","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","estimatedTime":"15min"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------":{"abstract":[],"url":"\/tutorials\/table-of-contents\/---------","type":"topic","role":"article","kind":"article","title":"Навигация","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"},"StateOrBinding-02-04.swift":{"fileType":"swift","type":"file","highlights":[{"line":5},{"line":8},{"line":11},{"line":12},{"line":13},{"line":14}],"content":["import SwiftUI","","struct TestView: View {","","    @StateObject private var textHolder: TestViewStateHolder = \"\"","","    var body: some View {","        TutorForm(text: $textHolder.text)","    }","}","","final class TextHolder: ObservableObject {","    @Published var text: String = \"\"","}"],"syntax":"swift","identifier":"StateOrBinding-02-04.swift","fileName":"TestView.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState":{"role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","title":"Примеры организации ViewState","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState":{"abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":", который позволяет управлять навигацией в приложении."}],"url":"\/tutorials\/demo\/navigationstate#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","type":"section","role":"pseudoSymbol","kind":"section","title":"Пример использования NavigationState","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding":{"title":"State vs Binding","role":"project","type":"topic","estimatedTime":"10min","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"project","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","url":"\/tutorials\/demo\/state-vs-binding"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade":{"role":"pseudoSymbol","abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"section","type":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","title":"Пример формирования Facade","url":"\/tutorials\/demo\/facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade"},"StateOrBinding-01-02.swift":{"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self.text = text","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"fileType":"swift","fileName":"TutorForm.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10}],"identifier":"StateOrBinding-01-02.swift","type":"file","syntax":"swift"},"StateOrBinding-01-01.swift":{"fileType":"swift","type":"file","highlights":[],"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"syntax":"swift","identifier":"StateOrBinding-01-01.swift","fileName":"TutorForm.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState":{"role":"project","abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"kind":"project","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState","title":"Горизонтальный стек - push\/pop","estimatedTime":"10min","url":"\/tutorials\/demo\/navigationstate"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9":{"type":"section","role":"pseudoSymbol","title":"Передача стилей","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents":{"abstract":[],"url":"\/tutorials\/table-of-contents","type":"topic","role":"overview","title":"Обучающие материалы по VSURF","kind":"overview","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State":{"abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","type":"section","role":"pseudoSymbol","kind":"section","title":"Применение и возможности State","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State"},"StateOrBinding-01-03.swift":{"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self._text = State(initialValue: text)","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"fileType":"swift","fileName":"TutorForm.swift","highlights":[{"line":8}],"identifier":"StateOrBinding-01-03.swift","type":"file","syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Check-Your-Understanding":{"type":"link","title":"Check Your Understanding","url":"\/tutorials\/demo\/environment+weak#Check-Your-Understanding","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder":{"abstract":[{"type":"text","text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры."},{"type":"text","text":" "},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"url":"\/tutorials\/demo\/viewstate-+-viewstateholder","type":"topic","role":"project","kind":"project","title":"ViewState, UniversalState и ViewStateHolder","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder","estimatedTime":"20min"},"StateOrBinding-02-01.swift":{"content":["import SwiftUI","","struct TutorForm: View {","","    @Binding private var text: String","","    init(text: Binding<String>) {","        self._text = text","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"fileType":"swift","fileName":"TutorForm.swift","highlights":[],"identifier":"StateOrBinding-02-01.swift","type":"file","syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------------------State":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State","abstract":[],"kind":"article","role":"article","type":"topic","url":"\/tutorials\/table-of-contents\/---------------------state","title":"Внутренний и внешний State"}}}
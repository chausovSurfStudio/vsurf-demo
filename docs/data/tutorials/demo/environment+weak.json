{"sections":[{"title":"Применение Environment","chapter":"Связь между модулями и View","kind":"hero","estimatedTimeInMinutes":15,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}]}]},{"tasks":[{"title":"Передача значений","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"С помощью Environment можно передавать постоянные значения, такие как "},{"code":"placeholder","type":"codeVoice"},{"type":"text","text":", "},{"code":"hint","type":"codeVoice"},{"type":"text","text":" и т.д."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Не стоит пытаться передавать так динамические объекты или state. Обновление значений в environment не отразится на "},{"code":"View","type":"codeVoice"},{"type":"text","text":"."}]}]}],"stepsSection":[{"runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Определим "},{"code":"EnvironmentKey","type":"codeVoice"}]}],"caption":[],"type":"step","code":"Environment-01-01.swift"},{"runtimePreview":null,"type":"step","code":"Environment-01-02.swift","caption":[],"content":[{"inlineContent":[{"text":"Зарегистрируем значением в ","type":"text"},{"code":"EnvironmentValues","type":"codeVoice"},{"text":" и определим значение по умолчанию","type":"text"}],"type":"paragraph"}],"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Добавим короткий способ для установки значений в environment"}],"type":"paragraph"}],"media":null,"caption":[],"code":"Environment-01-03.swift","type":"step","runtimePreview":null},{"runtimePreview":"preview-Environment-01-04.png","content":[{"inlineContent":[{"text":"Проверим на простеньком View с полем ввода","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"code":"Environment-01-04.swift","type":"step"},{"media":null,"code":"Environment-01-05.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Добавим установку значения плейсхолдера из ","type":"text"},{"type":"codeVoice","code":"Environment"}]}],"runtimePreview":"preview-Environment-01-05.png","type":"step","caption":[]},{"runtimePreview":"preview-Environment-01-06.png","media":null,"code":"Environment-01-06.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Установим один плейсхолдер на несколько полей","type":"text"}]}],"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Или индивидуальные плейсхолдеры","type":"text"}]}],"caption":[],"runtimePreview":"preview-Environment-01-07.png","code":"Environment-01-07.swift","type":"step"}],"anchor":"Передача-значений"},{"title":"Передача стилей","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"В предыдущей секции мы показали как передавать элементарные значения, но можно ли передавать что-то более сложное?"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Конечно"}]},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Можно передавать любой объект, которому мы можем определить значение по умолчанию.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Сам объект не должен зависеть от State, однако он может иметь функции, которые меняют возвращаемое значение на основе составляющих State."}]},{"inlineContent":[{"type":"text","text":"Подробнее в этой секции."}],"type":"paragraph"}],"kind":"contentAndMedia"}],"anchor":"Передача-стилей","stepsSection":[{"caption":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"makeItem"},{"type":"text","text":" для модификации View элемента."},{"type":"text","text":" "},{"code":"makeContainer","type":"codeVoice"},{"text":" для модификации View контейнера","type":"text"}]}],"type":"step","media":null,"content":[{"inlineContent":[{"text":"Допустим, мы хотим стилизовать кастомный TabBar.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Определяем протокол стиля с двумя "},{"type":"codeVoice","code":"@ViewBuilder"},{"type":"text","text":" функциями."}],"type":"paragraph"}],"runtimePreview":null,"code":"Environment-02-01.swift"},{"content":[{"inlineContent":[{"type":"text","text":"Заполним "},{"code":"EnvironmentKey","type":"codeVoice"},{"type":"text","text":" и "},{"type":"codeVoice","code":"EnvironmentValues"},{"text":" как в предыдущей секции.","type":"text"}],"type":"paragraph"}],"media":null,"code":"Environment-02-02.swift","runtimePreview":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ссылаемся на "},{"code":"any TabBarViewStyle","type":"codeVoice"},{"type":"text","text":", так как мы пока не знаем, какой именно стиль будет установлен."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Не будем сильно углубляться в верстку "},{"code":"TabBarView","type":"codeVoice"},{"text":", но отметим, что для раскрытия стиля приходится оборачивать результат ","type":"text"},{"code":"makeItem","type":"codeVoice"},{"text":" и ","type":"text"},{"code":"makeContainer","type":"codeVoice"},{"type":"text","text":" в "},{"code":"AnyView","type":"codeVoice"},{"text":" для совместимости различных стилей.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"В SwiftUI любой модификатор над View возвращает измененное View, поэтому без этой трансформации абстрактный стиль не применить. Без "},{"code":"AnyView","type":"codeVoice"},{"type":"text","text":" просто не скомпилится."}],"type":"paragraph"}],"type":"step","media":null,"code":"Environment-02-03.swift","runtimePreview":null},{"runtimePreview":"preview-Environment-02-04.png","media":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"В итоге получаем классический tabBar"}],"type":"paragraph"}],"caption":[],"code":"Environment-02-04.swift"},{"code":"Environment-02-05.swift","runtimePreview":"preview-Environment-02-05.png","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"И современный вариант.","type":"text"}]}],"media":null,"caption":[{"inlineContent":[{"type":"text","text":"Полный вариант реализации вы можете посмотреть в Library модуле."}],"type":"paragraph"}]}]},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EnvironmentObject"},{"type":"text","text":", также как и "},{"type":"codeVoice","code":"EnvironmentValues"},{"text":", распространяется между View через ViewTree.","type":"text"},{"type":"text","text":" "},{"text":"Он позволяет делиться объектами ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" между несколькими View.","type":"text"},{"type":"text","text":" "},{"text":"Этот объект может содержать ","type":"text"},{"code":"Published","type":"codeVoice"},{"text":" свойства, из которых могут формироваться State конкретных View, а также принимать сигналы для изменения состояния.","type":"text"}]},{"inlineContent":[{"text":"В: Почему мы не используем ","type":"text"},{"type":"codeVoice","code":"EnvironmentObject"},{"text":"?","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"О: Не хотим зависеть от конкретного объекта","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Завязка на объекте может привести к проблемам при тестировании, а также к проблемам при изменении объекта.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Подробнее о причинах и об альтернативном решении мы расскажем в секции."}]}]}],"title":"Weak - Наша альтернатива EnvironmentObject","anchor":"Weak-Наша-альтернатива-EnvironmentObject","stepsSection":[{"runtimePreview":null,"caption":[],"code":"Environment-03-01.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Представим экран Onboarding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Существует некоторое хранилище статуса просмотра онбоардинга, которое View получает через "},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":".`","type":"text"}]}],"media":null,"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Где-то в App это хранилище создается фабрикой, хранится и регистрируется в Environment.","type":"text"}]}],"code":"Environment-03-02.swift","caption":[{"inlineContent":[{"text":"Проблема в том, что регистрация происходит по классу реализации.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":null,"type":"step"},{"caption":[{"type":"paragraph","inlineContent":[{"text":"А что если мы всё-таки хотим разделить ответственность между разными View?","type":"text"},{"text":" ","type":"text"},{"text":"Например, в App хотим проверять статус, а в ","type":"text"},{"code":"OnboardingView","type":"codeVoice"},{"type":"text","text":" использовать протокол "},{"code":"OnboardingFlowSignal","type":"codeVoice"},{"text":" для оповещения о завершении прохода Onboarding-а.","type":"text"}]}],"media":null,"code":"Environment-03-03.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Таким образом, даже когда мы разделяем хранилище на несколько протоколов, мы все равно должны регистрировать его по конкретному классу. И никак иначе."}]}],"runtimePreview":null},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"Он позволяет нам получить слабую ссылку на объект, внутри любой View.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Для этих целей мы написали propertyWrapper "},{"type":"codeVoice","code":"@Weak"},{"type":"text","text":"."}]}],"code":"Environment-03-04.swift","media":null,"runtimePreview":null},{"type":"step","media":null,"code":"Environment-03-05.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"Синтаксис схож с тем, что мы использовали для ","type":"text"},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":".","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"А регистрация объекта производится по требуемому протоколу."}]}],"runtimePreview":null}]}],"kind":"tasks"},{"kind":"assessments","assessments":[{"content":[],"type":"multiple-choice","title":[{"inlineContent":[{"text":"Какие значения можно передавать через EnvironmentValues?","type":"text"}],"type":"paragraph"}],"choices":[{"isCorrect":true,"justification":[{"inlineContent":[{"type":"text","text":"Это основное назначение Environment"}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"Константы, Стили","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"State, Binding"}]}],"justification":[{"type":"paragraph","inlineContent":[{"text":"Так не будет работать.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Перечитай первый раздел, чтобы освежить память."}]}],"isCorrect":false},{"isCorrect":false,"content":[{"inlineContent":[{"text":"AnyPublisher","type":"text"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Передать его можно, но"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Какое у него будет значение по умолчанию?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"В какой момент мы подпишемся на этот Publisher?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Какое значение получим при подписке?","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Слишком много вопросов, и так мало ответов.","type":"text"}],"type":"paragraph"}]},{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Для передачи этих объектов существует "},{"code":"EnvironmentObject","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Он тоже использует Environment, но вместо пары Key\/Value регистрирует объекты по классу."}]}],"content":[{"inlineContent":[{"type":"text","text":"Объекты ObservableObject"}],"type":"paragraph"}],"isCorrect":false}]}],"anchor":"Check-Your-Understanding"},{"action":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals","type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"overridingTitle":"Get started","isActive":true},"abstract":[{"text":"Сущность ","type":"text"},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" это протокол, используемый для оповещения модулей верхнего уровня о "},{"inlineContent":[{"text":"событиях","type":"text"}],"type":"strong"},{"text":", происходящих в других модулях.","type":"text"}],"title":"Оповещение других модулей","featuredEyebrow":"Tutorial","kind":"callToAction"}],"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View","projects":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade"}]},{"sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject"},{"kind":"assessment","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak"},{"sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals"}]},{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding","kind":"assessment"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------","projects":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState"}]}]}],"paths":[["doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/$volume","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View"]],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents"},"variants":[{"paths":["\/tutorials\/demo\/environment+weak"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","interfaceLanguage":"swift"},"metadata":{"categoryPathComponent":"Table-of-contents","role":"project","title":"Применение Environment","category":"Оглавление"},"references":{"preview-Environment-02-05.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-02-05.png"}],"alt":"Парящий tabBar","identifier":"preview-Environment-02-05.png","type":"image"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------------------State":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State","abstract":[],"kind":"article","role":"article","type":"topic","url":"\/tutorials\/table-of-contents\/---------------------state","title":"Внутренний и внешний State"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State":{"abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","type":"section","role":"pseudoSymbol","kind":"section","title":"Применение и возможности State","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State"},"Environment-01-07.swift":{"content":["import Foundation","import SwiftUI","","struct FormView: View {","","    var body: some View {","        VStack {","            TutorView()","                .placeholderValue(\"Фамилия\")","            TutorView()","                .placeholderValue(\"Имя\")","            TutorView()","                .placeholderValue(\"Отчество\")","        }","    }","","}"],"type":"file","highlights":[{"line":9},{"line":11},{"line":13},{"line":14}],"fileName":"FormView.swift","identifier":"Environment-01-07.swift","fileType":"swift","syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState":{"role":"project","abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"kind":"project","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState","title":"Горизонтальный стек - push\/pop","estimatedTime":"10min","url":"\/tutorials\/demo\/navigationstate"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Check-Your-Understanding":{"type":"link","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"url":"\/tutorials\/demo\/environment+weak#Check-Your-Understanding","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding","title":"Check Your Understanding"},"Environment-01-01.swift":{"content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}"],"type":"file","highlights":[],"fileName":"PlaceholderValue.swift","identifier":"Environment-01-01.swift","fileType":"swift","syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/-----------------------View":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View","url":"\/tutorials\/table-of-contents\/-----------------------view","role":"article","title":"Связь между модулями и View"},"Environment-01-02.swift":{"content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}","","public extension EnvironmentValues {","    var placeholderValue: String {","        get { self[PlaceholderValueKey.self] }","        set { self[PlaceholderValueKey.self] = newValue }","    }","}"],"syntax":"swift","type":"file","identifier":"Environment-01-02.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"fileName":"PlaceholderValue.swift","fileType":"swift"},"Environment-02-04.swift":{"content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    var body: some View {","        TabBarView(items: StubItem.allCases,","                   selectedItem: .constant(StubItem.profile))","        .tabBarViewStyle(.classic)","    }","","}"],"type":"file","highlights":[],"fileName":"TutorView.swift","identifier":"Environment-02-04.swift","fileType":"swift","syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder":{"abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"kind":"section","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","title":"Примеры обмена данными между View и State через ViewStateHolder"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","kind":"section","role":"pseudoSymbol","title":"Weak - Наша альтернатива EnvironmentObject","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","type":"section"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade":{"abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"project","estimatedTime":"5min","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade","url":"\/tutorials\/demo\/facade","role":"project","title":"Facade как лицо модуля"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9":{"abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","type":"section","role":"pseudoSymbol","kind":"section","title":"Передача значений","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade":{"role":"pseudoSymbol","abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"section","type":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","title":"Пример формирования Facade","url":"\/tutorials\/demo\/facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#Check-Your-Understanding":{"title":"Check Your Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"url":"\/tutorials\/demo\/state-vs-binding#Check-Your-Understanding","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding","type":"link"},"Environment-01-06.swift":{"content":["import Foundation","import SwiftUI","","struct FormView: View {","","    var body: some View {","        VStack {","            TutorView()","            TutorView()","            TutorView()","        }.placeholderValue(\"Введите текст\")","    }","","}"],"type":"file","highlights":[],"fileName":"FormView.swift","identifier":"Environment-01-06.swift","fileType":"swift","syntax":"swift"},"Environment-02-02.swift":{"fileType":"swift","highlights":[{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}],"type":"file","syntax":"swift","identifier":"Environment-02-02.swift","content":["import SwiftUI","","public protocol TabBarViewStyle {","","    associatedtype ContainerView: View","    associatedtype ItemView: View","","    @ViewBuilder","    func makeItem(_ item: TabItemView, isActive: Bool) -> ItemView","","    @ViewBuilder","    func makeContainer(_ container: AnyView) -> ContainerView","","}","","public enum TabBarViewStyleKey: EnvironmentKey {","    public static var defaultValue: any TabBarViewStyle = .classic","}","","public extension EnvironmentValues {","    var tabBarViewStyle: any TabBarViewStyle {","        get { self[TabBarViewStyleKey.self] }","        set { self[TabBarViewStyleKey.self] = newValue }","    }","}"],"fileName":"TabBarViewStyle.swift"},"Environment-02-05.swift":{"content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    var body: some View {","        TabBarView(items: StubItem.allCases,","                   selectedItem: .constant(StubItem.main))","        .tabBarViewStyle(.rounded)","    }","","}"],"type":"file","highlights":[{"line":8},{"line":9}],"fileName":"TutorView.swift","identifier":"Environment-02-05.swift","fileType":"swift","syntax":"swift"},"Environment-03-01.swift":{"fileType":"swift","highlights":[],"type":"file","syntax":"swift","identifier":"Environment-03-01.swift","content":["import SwiftUI","","struct OnboardingView: View {","","    @EnvironmentObject private var onboardingStatusStorage: OnboardingStatusStorage","","    var body: some View {","        VStack {","            Text(\"Последний экран онбоардинга\")","","            Button {","                onboardingStatusStorage.isOnboardingCompleted = true","            } label: {","                Text(\"Готово\")","            }","        }","    }","}"],"fileName":"OnboardingView.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents":{"abstract":[],"url":"\/tutorials\/table-of-contents","type":"topic","role":"overview","title":"Обучающие материалы по VSURF","kind":"overview","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState":{"abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":", который позволяет управлять навигацией в приложении."}],"url":"\/tutorials\/demo\/navigationstate#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","type":"section","role":"pseudoSymbol","kind":"section","title":"Пример использования NavigationState","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState"},"preview-Environment-01-06.png":{"variants":[{"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-01-06.png","traits":["1x","light"]}],"alt":"Тестовая форма","identifier":"preview-Environment-01-06.png","type":"image"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak","type":"topic","role":"project","kind":"project","title":"Применение Environment","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","estimatedTime":"15min"},"Environment-03-05.swift":{"fileType":"swift","highlights":[{"line":21}],"type":"file","syntax":"swift","identifier":"Environment-03-05.swift","content":["import SwiftUI","","@main","struct TutorApp: App {","","    private let onboardingStatusStorage: OnboardingStatusStorage","","    init() {","        self.onboardingStatusStorage = OnboardingStatusStorageFactory.produce()","    }","","    var body: some Scene {","        WindowGroup {","            Group {","                if onboardingStatusStorage.isOnboardingCompleted {","                    MainView()","                } else {","                    OnboardingView()","                }","            }","            .weakReference(onboardingStatusStorage, as: OnboardingFlowSignal.self)","        }","    }","}"],"fileName":"TutorApp.swift"},"Environment-03-03.swift":{"fileType":"swift","identifier":"Environment-03-03.swift","fileName":"TabBarView.swift","type":"file","content":["@objc","public protocol OnboardingFlowSignal {","    func onboardingCompleted()","}","","public protocol OnboardingCompletionProvider: AnyObject {","","    var isOnboardingCompleted: Bool { get }","","}"],"highlights":[],"syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------":{"abstract":[],"url":"\/tutorials\/table-of-contents\/---------","type":"topic","role":"article","kind":"article","title":"Навигация","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"},"Environment-01-03.swift":{"fileType":"swift","fileName":"PlaceholderValue.swift","type":"file","identifier":"Environment-01-03.swift","syntax":"swift","content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}","","public extension EnvironmentValues {","    var placeholderValue: String {","        get { self[PlaceholderValueKey.self] }","        set { self[PlaceholderValueKey.self] = newValue }","    }","}","","public extension View {","    func placeholderValue(_ placeholderValue: String) -> some View {","        self.environment(\\.placeholderValue, placeholderValue)","    }","}"],"highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}]},"preview-Environment-01-07.png":{"alt":"Тестовая форма","type":"image","identifier":"preview-Environment-01-07.png","variants":[{"traits":["1x","light"],"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-01-07.png"}]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding":{"title":"State vs Binding","role":"project","type":"topic","estimatedTime":"10min","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"project","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","url":"\/tutorials\/demo\/state-vs-binding"},"Environment-03-02.swift":{"fileType":"swift","fileName":"TutorApp.swift","type":"file","identifier":"Environment-03-02.swift","syntax":"swift","content":["import SwiftUI","","@main","struct TutorApp: App {","","    private let onboardingStatusStorage: OnboardingStatusStorage","","    init() {","        self.onboardingStatusStorage = OnboardingStatusStorageFactory.produce()","    }","","    var body: some Scene {","        WindowGroup {","            Group {","                if onboardingStatusStorage.isOnboardingCompleted {","                    MainView()","                } else {","                    OnboardingView()","                }","            }","            .environmentObject(onboardingStatusStorage)","        }","    }","}"],"highlights":[]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState":{"role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","title":"Примеры организации ViewState","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState"},"preview-Environment-02-04.png":{"alt":"Классический tabBar","type":"image","identifier":"preview-Environment-02-04.png","variants":[{"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-02-04.png","traits":["1x","light"]}]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding":{"title":"Применение и возможности Binding","role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9":{"type":"section","role":"pseudoSymbol","title":"Передача стилей","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0":{"abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"text":", происходящих в других модулях.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","type":"section","title":"Пример отправки и обработки сигнала","role":"pseudoSymbol"},"Environment-02-03.swift":{"fileType":"swift","fileName":"TabBarView.swift","type":"file","identifier":"Environment-02-03.swift","syntax":"swift","content":["import Resources","import SwiftUI","","public struct TabBarView<Item: Hashable & LabelRepresentable>: View {","","    \/\/ MARK: - Properties","","    @Environment(\\.tabBarViewStyle)","    private var style","","    let items: [Item]","","    @Binding var selectedItem: Item","","    \/\/ MARK: - Init","","    public init(items: [Item], selectedItem: Binding<Item>) {","        self.items = items","        self._selectedItem = selectedItem","    }","","    \/\/ MARK: - Body","","    public var body: some View {","        AnyView(style.makeContainer(AnyView(","            HStack {","                ForEach(items, id: \\.self) { item in","                    let isSelected = selectedItem.hashValue == item.hashValue","                    Button {","                        selectedItem = item","                    } label: {","                        AnyView(style.makeItem(","                            Label(","                                title: {","                                    Text(item.title)","                                },","                                icon: {","                                    Image(asset: item.image).renderingMode(.template)","                                }","                            ),","                            isActive: isSelected)","                        )","                    }.accessibilityAddTraits(isSelected ? [.isSelected, .isButton] : .isButton)","                }","            }","        ))","        )","    }","","}"],"highlights":[]},"preview-Environment-01-04.png":{"alt":"Тестовое поле ввода","type":"image","identifier":"preview-Environment-01-04.png","variants":[{"traits":["1x","light"],"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-01-04.png"}]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder":{"abstract":[{"type":"text","text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры."},{"type":"text","text":" "},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"url":"\/tutorials\/demo\/viewstate-+-viewstateholder","type":"topic","role":"project","kind":"project","title":"ViewState, UniversalState и ViewStateHolder","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder","estimatedTime":"20min"},"Environment-02-01.swift":{"fileType":"swift","fileName":"TabBarViewStyle.swift","type":"file","identifier":"Environment-02-01.swift","syntax":"swift","content":["import SwiftUI","","public protocol TabBarViewStyle {","","    associatedtype ContainerView: View","    associatedtype ItemView: View","","    @ViewBuilder","    func makeItem(_ item: TabItemView, isActive: Bool) -> ItemView","","    @ViewBuilder","    func makeContainer(_ container: AnyView) -> ContainerView","","}"],"highlights":[]},"Environment-01-04.swift":{"fileType":"swift","identifier":"Environment-01-04.swift","fileName":"TutorView.swift","type":"file","content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    @State var text: String = \"\"","","    var body: some View {","        TextField(text: $text, label: {","            Text(\"\")","        })","    }","","}"],"highlights":[],"syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals","abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"type":"text","text":" это протокол, используемый для оповещения модулей верхнего уровня о "},{"inlineContent":[{"text":"событиях","type":"text"}],"type":"strong"},{"text":", происходящих в других модулях.","type":"text"}],"kind":"project","role":"project","type":"topic","url":"\/tutorials\/demo\/signals","estimatedTime":"10min","title":"Оповещение других модулей"},"Environment-03-04.swift":{"fileType":"swift","fileName":"OnboardingView.swift","type":"file","identifier":"Environment-03-04.swift","syntax":"swift","content":["import SwiftUI","import SurfCore","","struct OnboardingView: View {","","    @WeakReference private var onboardingSignal: OnboardingFlowSignal?","","    var body: some View {","        VStack {","            Text(\"Последний экран онбоардинга\")","","            Button {","                onboardingSignal?.onboardingCompleted()","            } label: {","                Text(\"Готово\")","            }","        }","    }","}"],"highlights":[{"line":2},{"line":6},{"line":13}]},"Environment-01-05.swift":{"fileType":"swift","identifier":"Environment-01-05.swift","fileName":"TutorView.swift","type":"file","content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    @Environment(\\.placeholderValue)","    var placeholderValue","","    @State var text: String = \"\"","","    var body: some View {","        TextField(text: $text, label: {","            Text(placeholderValue)","        })","    }","","}"],"highlights":[{"line":6},{"line":7},{"line":8},{"line":13}],"syntax":"swift"},"preview-Environment-01-05.png":{"alt":"Тестовое поле ввода","type":"image","identifier":"preview-Environment-01-05.png","variants":[{"url":"\/images\/dev.surf.sui-core.Demo\/preview-Environment-01-05.png","traits":["1x","light"]}]}}}
{"metadata":{"categoryPathComponent":"Table-of-contents","role":"project","category":"Оглавление","title":"Горизонтальный стек - push\/pop"},"sections":[{"kind":"hero","estimatedTimeInMinutes":10,"chapter":"Навигация","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Начиная с iOS 16, в SwiftUI доступен "},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}]},{"inlineContent":[{"text":"Удобнее всего использовать его вместе с ","type":"text"},{"type":"codeVoice","code":"NavigationPath"},{"type":"text","text":", который позволяет описывать пути навигации."},{"text":" ","type":"text"},{"type":"text","text":"Проблема заключается лишь в том, что "},{"code":"NavigationPath","type":"codeVoice"},{"type":"text","text":" анонимен, поэтому мы ввели структуру "},{"type":"codeVoice","code":"NavigationState"},{"text":", которая позволяет обозначить возможные пути навигации.","type":"text"}],"type":"paragraph"}],"title":"Горизонтальный стек - push\/pop"},{"tasks":[{"stepsSection":[{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Создадим "},{"type":"codeVoice","code":"NavigationState"},{"text":" и добавим в него несколько путей навигации.","type":"text"}],"type":"paragraph"}],"code":"NavigationState-01-01.swift","runtimePreview":null},{"caption":[{"inlineContent":[{"text":"На данный момент SwiftUI не позволяет нам сделать ","type":"text"},{"code":"popTo(destination:)","type":"codeVoice"},{"text":", из-за ограничений ","type":"text"},{"type":"codeVoice","code":"NavigationPath"},{"type":"text","text":" и невозможности обратиться к стеку по индексу."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"code":"NavigationState-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Если раскрыть макрос, вы увидете "},{"code":"NavigationPath","type":"codeVoice"},{"type":"text","text":" и функции для его модификации."}]}]},{"caption":[{"type":"paragraph","inlineContent":[{"text":"Не запутайтесь в скобочках. Важно, чтобы модификатор ","type":"text"},{"code":"navigationDestination","type":"codeVoice"},{"text":" был внутри ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":".","type":"text"}]}],"code":"NavigationState-01-03.swift","media":null,"type":"step","content":[{"inlineContent":[{"text":"Подключим наш ","type":"text"},{"code":"NavigationState","type":"codeVoice"},{"type":"text","text":" к "},{"code":"NavigationStack","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Переключим навигацию, с помощью метода ","type":"text"},{"code":"push","type":"codeVoice"},{"type":"text","text":"."}]}],"code":"NavigationState-01-04.swift","media":null,"type":"step","runtimePreview":null,"caption":[]},{"code":"NavigationState-01-05.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Аналогично можем менять ","type":"text"},{"type":"codeVoice","code":"navigationState"},{"text":" через Binding.","type":"text"}]}],"media":null,"caption":[],"type":"step","runtimePreview":null}],"anchor":"Пример-использования-NavigationState","title":"Пример использования NavigationState","contentSection":[{"media":"navigationstate-preview.mp4","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"codeVoice","code":"NavigationState"},{"type":"text","text":" это структура с вложенным enum "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":", который содержит все возможные пути навигации."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Хранение текущего "},{"code":"NavigationPath","type":"codeVoice"},{"text":" и переход на новый путь осуществляется с помощью макроса ","type":"text"},{"type":"codeVoice","code":"@NavigationState"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Остается лишь обработать изменения destination в "},{"code":"NavigationStack","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"contentAndMedia"}]}],"kind":"tasks"}],"identifier":{"url":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState","interfaceLanguage":"swift"},"kind":"project","variants":[{"paths":["\/tutorials\/demo\/navigationstate"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/$volume","doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"]],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding","kind":"assessment"}]},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","kind":"task"}]}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View"},{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding"},{"kind":"assessment","reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State"},{"projects":[{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState"}],"reference":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"}]},"references":{"navigationstate-preview.mp4":{"alt":"Демонстрация работы NavigationState","type":"video","identifier":"navigationstate-preview.mp4","poster":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/dev.surf.sui-core.Demo\/navigationstate-preview.mp4"}]},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents":{"abstract":[],"url":"\/tutorials\/table-of-contents","type":"topic","role":"overview","title":"Обучающие материалы по VSURF","kind":"overview","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9":{"type":"section","role":"pseudoSymbol","title":"Передача стилей","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","kind":"section","role":"pseudoSymbol","title":"Weak - Наша альтернатива EnvironmentObject","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","type":"section"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade":{"abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"project","estimatedTime":"5min","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade","url":"\/tutorials\/demo\/facade","role":"project","title":"Facade как лицо модуля"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak":{"abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"url":"\/tutorials\/demo\/environment+weak","type":"topic","role":"project","kind":"project","title":"Применение Environment","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak","estimatedTime":"15min"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State":{"abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","type":"section","role":"pseudoSymbol","kind":"section","title":"Применение и возможности State","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState":{"abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":", который позволяет управлять навигацией в приложении."}],"url":"\/tutorials\/demo\/navigationstate#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","type":"section","role":"pseudoSymbol","kind":"section","title":"Пример использования NavigationState","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9":{"abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"url":"\/tutorials\/demo\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","type":"section","role":"pseudoSymbol","kind":"section","title":"Передача значений","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder":{"abstract":[{"type":"text","text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры."},{"type":"text","text":" "},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"url":"\/tutorials\/demo\/viewstate-+-viewstateholder","type":"topic","role":"project","kind":"project","title":"ViewState, UniversalState и ViewStateHolder","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder","estimatedTime":"20min"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------":{"abstract":[],"url":"\/tutorials\/table-of-contents\/---------","type":"topic","role":"article","kind":"article","title":"Навигация","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/-----------------------View":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/-----------------------View","url":"\/tutorials\/table-of-contents\/-----------------------view","role":"article","title":"Связь между модулями и View"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding":{"title":"Применение и возможности Binding","role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding":{"title":"State vs Binding","role":"project","type":"topic","estimatedTime":"10min","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"kind":"project","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding","url":"\/tutorials\/demo\/state-vs-binding"},"NavigationState-01-01.swift":{"fileType":"swift","identifier":"NavigationState-01-01.swift","fileName":"TutorNavigationState.swift","type":"file","highlights":[],"content":["import SwiftUI","import SurfMacros","","\/\/ swiftlint:disable convenience_type","@NavigationState","struct TutorNavigationState {","","    enum Destination: Hashable {","        case itemDetail(SomeEntity)","        case stub(String)","        case final","    }","}","\/\/ swiftlint:enable convenience_type"],"syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/State-vs-Binding#Check-Your-Understanding":{"type":"link","title":"Check Your Understanding","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/State-vs-Binding#Check-Your-Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"url":"\/tutorials\/demo\/state-vs-binding#Check-Your-Understanding"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Environment+Weak#Check-Your-Understanding":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Environment+Weak#Check-Your-Understanding","url":"\/tutorials\/demo\/environment+weak#Check-Your-Understanding","type":"link","title":"Check Your Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}]},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals","abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"type":"text","text":" это протокол, используемый для оповещения модулей верхнего уровня о "},{"inlineContent":[{"text":"событиях","type":"text"}],"type":"strong"},{"text":", происходящих в других модулях.","type":"text"}],"kind":"project","role":"project","type":"topic","url":"\/tutorials\/demo\/signals","estimatedTime":"10min","title":"Оповещение других модулей"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/NavigationState":{"role":"project","abstract":[{"text":"Начиная с iOS 16, в SwiftUI доступен ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"kind":"project","type":"topic","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/NavigationState","title":"Горизонтальный стек - push\/pop","estimatedTime":"10min","url":"\/tutorials\/demo\/navigationstate"},"NavigationState-01-05.swift":{"highlights":[],"fileType":"swift","content":["import SwiftUI","","struct TutorView: View {","","    @Binding var navigationState: TutorNavigationState","","    private var item: SomeEntity","","    \/\/ MARK: - Initialization","","    init(item: SecureItemEntity, navigationState: Binding<MainNavigationState>) {","        self.item = item","        self._navigationState = navigationState","    }","","    var body: some View {","        VStack {","            Text(\"Детали: \\(item.title)\")","            Button(\"Показать финал\") {","                navigationState.push(destination: .final)","            }","            Button(\"Вернуться\") {","                navigationState.popToRoot()","            }","        }","        .navigationTitle(\"Детальный экран\")","    }","}"],"syntax":"swift","type":"file","fileName":"TutorView.swift","identifier":"NavigationState-01-05.swift"},"NavigationState-01-03.swift":{"fileType":"swift","identifier":"NavigationState-01-03.swift","fileName":"TutorViewGroup.swift","highlights":[],"type":"file","content":["import SwiftUI","","public struct TutorViewGroup: View {","","    @State private var navigationState: TutorNavigationState = .initial","","    public var body: some View {","        NavigationStack(path: $navigationState.navigationPath) {","            HStack {","                EmptyView()","            }","            .navigationTitle(\"Заглушка\")","            .navigationDestination(for: MainNavigationState.Destination.self) { destination in","                switch destination {","                case .itemDetail(let item):","                    TutorView(item: item, navigationState: $navigationState)","                default:","                    EmptyView()","                }","            }","        }","    }","}"],"syntax":"swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade":{"role":"pseudoSymbol","abstract":[{"text":"Иными словами это Input и Output модуля.","type":"text"}],"kind":"section","type":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","title":"Пример формирования Facade","url":"\/tutorials\/demo\/facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState":{"role":"pseudoSymbol","type":"section","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","title":"Примеры организации ViewState","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"kind":"section","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState"},"doc://dev.surf.sui-core.Demo/tutorials/Table-of-contents/---------------------State":{"identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Table-of-contents\/---------------------State","abstract":[],"kind":"article","role":"article","type":"topic","url":"\/tutorials\/table-of-contents\/---------------------state","title":"Внутренний и внешний State"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0":{"abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"text":", происходящих в других модулях.","type":"text"}],"kind":"section","url":"\/tutorials\/demo\/signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","type":"section","title":"Пример отправки и обработки сигнала","role":"pseudoSymbol"},"NavigationState-01-04.swift":{"type":"file","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14}],"fileType":"swift","content":["import SwiftUI","","public struct TutorViewGroup: View {","","    @State private var navigationState: TutorNavigationState = .initial","","    public var body: some View {","        NavigationStack(path: $navigationState.navigationPath) {","            HStack {","                Button(\"Единственный элемент\") {","                    navigationState.push(destination:","                            .itemDetail(.init(id: \"1\",","                                              title: \"\")))","                }","            }","            .navigationTitle(\"Заглушка\")","            .navigationDestination(for: MainNavigationState.Destination.self) { destination in","                switch destination {","                case .itemDetail(let item):","                    TutorView(item: item, navigationState: $navigationState)","                default:","                    EmptyView()","                }","            }","        }","    }","}"],"identifier":"NavigationState-01-04.swift","syntax":"swift","fileName":"TutorViewGroup.swift"},"NavigationState-01-02.swift":{"type":"file","highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"syntax":"swift","fileType":"swift","fileName":"TutorNavigationState.swift","content":["import SwiftUI","import SurfMacros","","@NavigationState","struct TutorNavigationState {","","    enum Destination: Hashable {","        case itemDetail(SomeEntity)","        case stub(String)","        case final","    }","","    var navigationPath: NavigationPath","","    static var initial: Self {","        .init(navigationPath: .init())","    }","","    mutating func push(destination: Destination) {","        navigationPath.append(destination)","    }","","    mutating func pop() {","        navigationPath.removeLast()","    }","","    mutating func popToRoot() {","        navigationPath = .init()","    }","}"],"identifier":"NavigationState-01-02.swift"},"doc://dev.surf.sui-core.Demo/tutorials/Demo/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder":{"abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"kind":"section","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/dev.surf.sui-core.Demo\/tutorials\/Demo\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","url":"\/tutorials\/demo\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","title":"Примеры обмена данными между View и State через ViewStateHolder"}}}